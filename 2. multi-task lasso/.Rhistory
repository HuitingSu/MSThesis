plot_digit <- function(x){
m <- matrix(x, nrow=16, ncol=16)
m <- apply(m, 2, rev)
image(m, col = gray(0:255/255))
}
plot_digit(digits[,1101])
x <- c(1,2,3,4)
m <- matrix(x,2,2)
m
m <- apply(m, 2, rev)
m
plot_digit <- function(x){
m <- matrix(x, nrow=16, ncol=16, byrow = TRUE)
m <- apply(m, 2, rev)
image(m, col = gray(0:255/255))
}
plot_digit(digits[,1101])
plot_digit <- function(x){
m <- matrix(x, nrow=16, ncol=16, byrow = TRUE)
m <- apply(m, 1, rev)
image(m, col = gray(0:255/255))
}
plot_digit(digits[,1101])
apply
m
m <- apply(m, 1, rev)
m
plot_digit <- function(x){
m <- matrix(x, nrow=16, ncol=16, byrow = TRUE)
m <- apply(m, 1, rev)
m <- t(m)
image(m, col = gray(0:255/255))
}
plot_digit <- function(x){
m <- matrix(x, nrow=16, ncol=16, byrow = TRUE)
m <- apply(m, 1, rev)
m <- t(m)
image(m, col = gray(0:255/255))
}
plot_digit(digits[,1101])
1:1100:11000
?:
seq(1, 11000, 1100)
plot_digit(digits[,1101])
apply(digits[, seq(1, 11000, 1100)], 1, plot_digit)
seq(1, 11000, 1100)
digits[, seq(1, 11000, 1100)]
?apply
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
x <- cbind(x1 = 3, x2 = c(4:1, 2:5))
x
dimnames(x)[[1]] <- letters[1:8]
x
apply(x, 2, mean, trim = .2)
plot_digit(digits[,1101])
apply(digits[, seq(1, 11000, 1100)], 2, plot_digit)
plot_digit(digits[,1101])
apply(digits[, seq(1, 11000, 1100)], 2, plot_digit)
apply(digits[, seq(1, 11000, 1100)], 2, plot_digit)
library(glmnet)
set.seed(65587)
x <- matrix(rnorm(100), 25, 4)
#x <- as.data.frame(x)
#colnames(x) <- c('x1', 'x2', 'x3', 'x4')
y1 <- 0.9*x[,1] + 0.00*x[,2] + 1.2*x[,3] + 0.3*x[,4]
y2 <- 1.1*x[,1] + 0.02*x[,2] + 0.8*x[,3] + 0.4*x[,4]
y3 <- 0.9*x[,1] + 0.01*x[,2] + 1.3*x[,3] + 0.5*x[,4]
y <- cbind(y1, y2, y3)
mfit = glmnet(x, y, family = "mgaussian")
plot(mfit,type.coef="2norm", label = TRUE)
coef(mfit, s=1)
coef(mfit, s=0.1)
coef(mfit, s=0.001)
fit1 = glmnet(x$x1, y$y1)
View(x)
View(y)
fit1 = glmnet(x, y)
x=matrix(rnorm(100*20),100,20)
y=rnorm(100)
View(x)
View(x)
set.seed(65587)
x <- matrix(rnorm(100), 25, 4)
#x <- as.data.frame(x)
#colnames(x) <- c('x1', 'x2', 'x3', 'x4')
y1 <- 0.9*x[,1] + 0.00*x[,2] + 1.2*x[,3] + 0.3*x[,4]
y2 <- 1.1*x[,1] + 0.02*x[,2] + 0.8*x[,3] + 0.4*x[,4]
y3 <- 0.9*x[,1] + 0.01*x[,2] + 1.3*x[,3] + 0.5*x[,4]
y <- cbind(y1, y2, y3)
mfit = glmnet(x, y, family = "mgaussian")
plot(mfit,type.coef="2norm", label = TRUE)
fit1 = glmnet(x, y$y1)
fit1 = glmnet(x, y[,1])
fit1
coef(mfit, s=0.1)
fit1 = glmnet(x, y[,1])
coef(fit1, s=0.1)
fit2 = glmnet(x, y[,2])
fit3 = glmnet(x, y[,3])
coef(fit2, s=0.1)
fit1 = glmnet(x, y[,1])
fit2 = glmnet(x, y[,2])
fit3 = glmnet(x, y[,3])
coef(fit1, s=0.1)
coef(fit2, s=0.1)
coef(fit3, s=0.1)
cbind(coef(fit1, s=0.1), coef(fit2, s=0.1),coef(fit3, s=0.1))
coef(mfit, s=0.1)$y1
cbind(coef(mfit, s=0.1)$y1, coef(mfit, s=0.1)$y2, coef(mfit, s=0.1)$y3)
cv.lasso
cv.lasso(x,y)
cv.mfit = cv.glmnet(x, y, family = "mgaussian")
set.seed(65587)
x <- matrix(rnorm(10000), 25, 4)
#x <- as.data.frame(x)
#colnames(x) <- c('x1', 'x2', 'x3', 'x4')
y1 <- 0.9*x[,1] + 0.00*x[,2] + 1.2*x[,3] + 0.3*x[,4]
y2 <- 1.1*x[,1] + 0.02*x[,2] + 0.8*x[,3] + 0.4*x[,4]
y3 <- 0.9*x[,1] + 0.01*x[,2] + 1.3*x[,3] + 0.5*x[,4]
y <- cbind(y1, y2, y3)
mfit = glmnet(x, y, family = "mgaussian")
plot(mfit,type.coef="2norm", label = TRUE)
#coef(mfit, s=1)
cbind(coef(mfit, s=0.1)$y1, coef(mfit, s=0.1)$y2, coef(mfit, s=0.1)$y3)
#coef(mfit, s=0.001)
fit1 = glmnet(x, y[,1])
fit2 = glmnet(x, y[,2])
fit3 = glmnet(x, y[,3])
cbind(coef(fit1, s=0.1), coef(fit2, s=0.1),coef(fit3, s=0.1))
cv.mfit = cv.glmnet(x, y, family = "mgaussian")
cv.mfit = cv.glmnet(x, y, family = "mgaussian")
View(x)
2500*4
set.seed(65587)
x <- matrix(rnorm(10000), 2500, 4)
#x <- as.data.frame(x)
#colnames(x) <- c('x1', 'x2', 'x3', 'x4')
y1 <- 0.9*x[,1] + 0.00*x[,2] + 1.2*x[,3] + 0.3*x[,4]
y2 <- 1.1*x[,1] + 0.02*x[,2] + 0.8*x[,3] + 0.4*x[,4]
y3 <- 0.9*x[,1] + 0.01*x[,2] + 1.3*x[,3] + 0.5*x[,4]
y <- cbind(y1, y2, y3)
mfit = glmnet(x, y, family = "mgaussian")
plot(mfit,type.coef="2norm", label = TRUE)
#coef(mfit, s=1)
cbind(coef(mfit, s=0.1)$y1, coef(mfit, s=0.1)$y2, coef(mfit, s=0.1)$y3)
#coef(mfit, s=0.001)
fit1 = glmnet(x, y[,1])
fit2 = glmnet(x, y[,2])
fit3 = glmnet(x, y[,3])
fit1 = glmnet(x, y[,1])
fit2 = glmnet(x, y[,2])
fit3 = glmnet(x, y[,3])
cbind(coef(fit1, s=0.1), coef(fit2, s=0.1),coef(fit3, s=0.1))
cv.mfit = cv.glmnet(x, y, family = "mgaussian")
plot(cv.mfit)
coef(cv.mfit)
cbind(coef(cv.mfit)$y1, coef(cv.mfit)$y2, coef(cv.mfit)$y3)
cv.mfit = cv.glmnet(x, y, family = "mgaussian")
cv.fit1 = cv.glmnet(x, y[,1])
cv.fit2 = cv.glmnet(x, y[,2])
cv.fit3 = cv.glmnet(x, y[,3])
plot(cv.mfit)
plot(cv.fit1)
plot(cv.fit2)
plot(cv.fit3)
cv.mfit = cv.glmnet(x, y, family = "mgaussian")
cv.fit1 = cv.glmnet(x, y[,1])
cv.fit2 = cv.glmnet(x, y[,2])
cv.fit3 = cv.glmnet(x, y[,3])
plot(cv.mfit)
plot(cv.fit1)
plot(cv.fit2)
plot(cv.fit3)
(cv.mfit)
(cv.mfit)
plot(cv.mfit)
plot(cv.fit1)
plot(cv.fit2)
plot(cv.fit3)
cbind(coef(cv.mfit)$y1, coef(cv.mfit)$y2, coef(cv.mfit)$y3)
cbind(coef(cv.fit1), coef(cv.fit2), coef(cv.fit3))
multi_lasso <- function(x,y){
cv.mfit = cv.glmnet(x, y, family = "mgaussian")
cv.fit1 = cv.glmnet(x, y[,1])
cv.fit2 = cv.glmnet(x, y[,2])
cv.fit3 = cv.glmnet(x, y[,3])
plot(cv.mfit)
plot(cv.fit1)
plot(cv.fit2)
plot(cv.fit3)
rbind(cbind(coef(cv.mfit)$y1, coef(cv.mfit)$y2, coef(cv.mfit)$y3), cbind(coef(cv.fit1), coef(cv.fit2), coef(cv.fit3)))
}
set.seed(65587)
x <- matrix(rnorm(10000), 2500, 4)
#x <- as.data.frame(x)
#colnames(x) <- c('x1', 'x2', 'x3', 'x4')
y1 <- 0.9*x[,1] + 0.00*x[,2] + 1.2*x[,3] + 0.3*x[,4]
y2 <- 1.1*x[,1] + 0.02*x[,2] + 0.8*x[,3] + 0.4*x[,4]
y3 <- 0.9*x[,1] + 0.01*x[,2] + 1.3*x[,3] + 0.5*x[,4]
y <- cbind(y1, y2, y3)
multi_lasso(x, y)
set.seed(65587)
x <- matrix(rnorm(10000), 2500, 4)
#x <- as.data.frame(x)
#colnames(x) <- c('x1', 'x2', 'x3', 'x4')
y1 <- 0.9*x[,1] + 0.01*x[,2] + 1.2*x[,3] + 0.3*x[,4]
y2 <- 1.1*x[,1] + 0.02*x[,2] + 0.1*x[,3] + 0.4*x[,4]
y3 <- 0.9*x[,1] + 0.01*x[,2] + 1.3*x[,3] + 1.1*x[,4]
y <- cbind(y1, y2, y3)
multi_lasso(x, y)
?plot
multi_lasso <- function(x, y){
cv.mfit = cv.glmnet(x, y, family = "mgaussian")
cv.fit1 = cv.glmnet(x, y[,1])
cv.fit2 = cv.glmnet(x, y[,2])
cv.fit3 = cv.glmnet(x, y[,3])
plot(cv.mfit, main="multi-lasso")
plot(cv.fit1, main="fit1")
plot(cv.fit2, main="fit2")
plot(cv.fit3, main="fit3")
rbind(cbind(coef(cv.mfit)$y1, coef(cv.mfit)$y2, coef(cv.mfit)$y3), cbind(coef(cv.fit1), coef(cv.fit2), coef(cv.fit3)))
}
set.seed(65587)
x <- matrix(rnorm(10000), 2500, 4)
#x <- as.data.frame(x)
#colnames(x) <- c('x1', 'x2', 'x3', 'x4')
y1 <- 0.9*x[,1] + 0.01*x[,2] + 1.2*x[,3] + 0.3*x[,4]
y2 <- 1.1*x[,1] + 0.02*x[,2] + 0.1*x[,3] + 0.4*x[,4]
y3 <- 0.9*x[,1] + 0.01*x[,2] + 1.3*x[,3] + 1.1*x[,4]
y <- cbind(y1, y2, y3)
multi_lasso(x, y)
set.seed(65587)
x <- matrix(rnorm(10000), 2500, 4)
#x <- as.data.frame(x)
#colnames(x) <- c('x1', 'x2', 'x3', 'x4')
y1 <- 0.9*x[,1] + 0.01*x[,2] + 1.2*x[,3] + 0.03*x[,4]
y2 <- 1.1*x[,1] + 0.02*x[,2] + 0.01*x[,3] + 0.04*x[,4]
y3 <- 0.9*x[,1] + 0.01*x[,2] + 1.3*x[,3] + 1.1*x[,4]
y <- cbind(y1, y2, y3)
multi_lasso(x, y)
select_digs <- c(0,5,4)
size =5
select_digs[select_digs==0] <- 10
select_digs
start <- (select_digs-1)*1100+1
start
seq(start, length.out=size)
apply(start, seq(length.out=size))
apply(start, 1, seq(length.out=size))
apply(start, 1, seq)
?seq
apply
?apply
get_digits <- function(select_digs, size){
index <- numeric()
select_digs[select_digs==0] <- 10
start <- (select_digs-1)*1100+1
for(ii in 1:length(start)){
index <- c(index, seq(start[ii], length.out = size))
}
}
get_digits(select_digs, size)
get_digits <- function(select_digs, size){
index <- numeric()
select_digs[select_digs==0] <- 10
start <- (select_digs-1)*1100+1
for(ii in 1:length(start)){
index <- c(index, seq(start[ii], length.out = size))
return(index)
}
}
get_digits(select_digs, size)
start <- (select_digs-1)*1100+1
start
length(start)
index <- c(index, seq(start[1], length.out = size))
index <- numeric()
for(ii in 1:length(start)){
index <- c(index, seq(start[ii], length.out = size))
}
index
get_digits <- function(select_digs, size){
index <- numeric()
select_digs[select_digs==0] <- 10
start <- (select_digs-1)*1100+1
for(ii in 1:length(start)){
index <- c(index, seq(start[ii], length.out = size))
}
return(index)
}
get_digits(select_digs, size)
get_digits <- function(select_digs, size){
index <- numeric()
select_digs[select_digs==0] <- 10
start <- (select_digs-1)*1100+1
for(ii in 1:length(start)){
index <- c(index, seq(start[ii], length.out = size))
}
return(digits[index,])
}
get_digits(select_digs, size)
library(RnavGraphImageData)
data(digits)
get_digits(select_digs, size)
my_train <- get_digits(select_digs, size)
View(my_train)
my_train <- digits[index,]
View(my_train)
View(digits)
get_digits <- function(select_digs, size){
index <- numeric()
select_digs[select_digs==0] <- 10
start <- (select_digs-1)*1100+1
for(ii in 1:length(start)){
index <- c(index, seq(start[ii], length.out = size))
}
return(digits[,index])
}
my_train <- get_digits(select_digs, size)
View(my_train)
plot_digit(my_train[1])
plot_digit(my_train[,1])
plot_digit <- function(x){
m <- matrix(x, nrow=16, ncol=16, byrow = TRUE)
m <- apply(m, 1, rev)
m <- t(m)
image(m, col = gray(0:255/255))
}
plot_digit(my_train[,1])
plot_digit(my_train[,5])
plot_digit(my_train[,6])
plot_digit(my_train[,10])
plot_digit(my_train[,11])
plot_digit(my_train[,15])
select_digs <- c(0,8)
size <- 100
my_train <- get_digits(select_digs, size)
plot_digit(my_train[,15])
select_digs <- c(0,8)
size <- 100
my_train <- get_digits(select_digs, size)
plot_digit(my_train[,101])
select_digs <- c(0,8)
size <- 100
my_train <- get_digits(select_digs, size)
plot_digit(my_train[,100])
a <- c(1,1,1)
b<- c(0,0,0)
(a-b)^2
sum((a-b)^2)
sqrt(3)
(a-b)^2 %>% sum %>% sqrt
library(plyr)
(a-b)^2 %>% sum %>% sqrt
library(magrittr)
(a-b)^2 %>% sum %>% sqrt
euc_dist <- function(a, b) (a-b)^2 %>% sum %>% sqrt
euc_dist(a,b)
?laply
laply(baseball, is.factor)
baseball
baseball[1]
View(my_train)
laply(my_train, euc_dist, my_train[1])
new_digit <- my_train[1]
laply(my_train, euc_dist, new_digit)
new_digit <- my_train[1]
distances <- laply(my_train, euc_dist, new_digit)
head(distances)
sort(distances)
distances <- cbind(distances, 1:length(distances))
distances
distances <- laply(my_train, euc_dist, new_digit)
distances <- cbind(distances, 1:length(distances))
distances
sort(distances)
distances <- laply(my_train, euc_dist, new_digit)
distances <- cbind(distances, 1:length(distances))
order(distances)
distances <- laply(my_train, euc_dist, new_digit)
distances <- cbind(distances, 1:length(distances))
View(distances)
order(distances, V2)
(ii <- order(x <- c(1,1,3:1,1:4,3), y <- c(9,9:1), z <- c(2,1:9)))
## 6  5  2  1  7  4 10  8  3  9
rbind(x, y, z)[,ii]
x
order(distances[,1])
distances[,1]
distances[order(distances[,1]),]
distances <- laply(my_train, euc_dist, new_digit)
sort(distances, index.return = TRUE)
indices <- sort(distances, index.return = TRUE)$ix
indices
indices[1:k]
indices[1:10]
rep(c(0, 8), 100)
rep(c(0, 8), each= 100)
my_labels <- rep(c(0, 8), each= 100)
my_train <- c(my_train, my_labels)
my_train <- cbind(my_train, my_labels)
View(my_train)
select_digs <- c(0,8)
size <- 100
my_train <- get_digits(select_digs, size)
#plot_digit(my_train[,100])
my_labels <- rep(c(0, 8), each= 100)
my_train <- cbind(my_train, my_labels)
View(my_train)
kindices <- indices[1:k]
kindices <- indices[1:10]
my_labels[kindices]
labels <- my_labels[kindices]
table(labels)
freq <- table(labels)
max(freq)
min(freq)
sort(freq, index.return=TRUE)
sort(freq, index.return=TRUE)$IX
sort(freq, index.return=TRUE)$ix
?table
sort(freq, decreasing = TRUE)[1]
label <- sort(freq, decreasing = TRUE)[1]
variable <- c(1,1,1,1,1,1,2,3,4,5,7,7,5,7,7,7)
sort(table(variable),decreasing=TRUE)[1:3]
names(which.max(table(variables)))
names(which.max(table(variable)))
names(max(table(variable)))
labels <- my_labels[kindices]
freq <- table(labels)
return(names(which.max(freq)))
names(which.max(freq))
k <- 5
my_knn <- function(k, my_train, my_labels, test_ip){
kindices <- get_knn(k, my_train, test_ip)
return(plabel <- get_label(kindices))
}
k <- 5
laply(my_train, my_knn, my_train = my_train, k = k, my_labels = my_labels)
get_knn <- function(k, my_train, new_digit){
distances <- laply(my_train, euc_dist, new_digit)
indices <- sort(distances, index.return = TRUE)$ix
return(indices[1:k])
}
my_labels <- rep(c(0, 8), each= 100)
get_label <- function(kindices){
labels <- my_labels[kindices]
freq <- table(labels)
return(names(which.max(freq)))
}
my_knn <- function(k, my_train, my_labels, test_ip){
kindices <- get_knn(k, my_train, test_ip)
return(plabel <- get_label(kindices))
}
k <- 5
laply(my_train, my_knn, my_train = my_train, k = k, my_labels = my_labels)
sum(prediction[1:100] != my_labels[1:100])
k <- 5
prediction <- laply(my_train, my_knn, my_train = my_train, k = k, my_labels = my_labels)
sum(prediction[1:100] != my_labels[1:100])
paste("my_knn got wrong ", sum(prediction[1:100] != my_labels[1:100]), " 0's.")
k <- 5
prediction <- laply(my_train, my_knn, my_train = my_train, k = k, my_labels = my_labels)
paste("my_knn got wrong ", sum(prediction[1:100] != my_labels[1:100]), " 0's.")
paste("my_knn got wrong ", sum(prediction[101:200] != my_labels[101:200]), " 8's.")
plot_digit(digits[,7900])
plot_digit(digits[,9900])
plot_digit(digits[,10000])
plot_digit(digits[,10099])
test_labels <- rep(c(8, 0), each =100)
my_test <- digits[,c(10000:10099, 7900:7999)])
my_test <- digits[,c(10000:10099, 7900:7999)]
test_labels <- rep(c(0, 8), each =100)
prediction <- laply(my_test, my_knn, my_train = my_train, k = k, my_labels = test_labels)
paste("my_knn got wrong ", sum(prediction[1:100] != my_labels[1:100]), " 0's.")
paste("my_knn got wrong ", sum(prediction[101:200] != my_labels[101:200]), " 8's.")
test_labels
plot_digit(digits[,4900])
my_test <- digits[,c(10000:10099, 7900:7999)]
test_labels <- rep(c(0, 8), each =100)
prediction <- laply(my_test, my_knn, my_train = my_train, k = k, my_labels = my_labels)
paste("my_knn got wrong ", sum(prediction[1:100] != test_labels[1:100]), " 0's.")
paste("my_knn got wrong ", sum(prediction[101:200] != test_labels[101:200]), " 8's.")
my_test5 <- digits[,4900:4999]
prediction <- laply(my_test5, my_knn, my_train = my_train, k = k, my_labels = my_labels)
table(prediction)
prediction
plot_digit <- function(x){
m <- matrix(x, nrow=16, ncol=16, byrow = TRUE)
m <- apply(m, 1, rev)
m <- t(m)
image(m, col = gray(0:255/255))
}
apply(digits[, seq(1, 11000, 1100)], 2, plot_digit)
plot_digit(digits[, c(5500, 6600)]
plot_digit(digits[, c(5500, 6600)])
plot_digit(digits[, 5500])
plot_digit(digits[, 6600])
(digits[, seq(1, 11000, 1100)], 2, plot_digit)
apply(digits[, seq(1, 11000, 1100)], 2, plot_digit)
plot_digit(digits[, 5501])
plot_digit(digits[, 6601])
plot_digit(digits[, 5502])
plot_digit(digits[, 6602])
apply(digits[, seq(1, 5500, 1100)], 2, plot_digit)
plot_digit(digits[, 5502])
plot_digit(digits[, 6602])
apply(digits[, seq(7701, 11000, 1100)], 2, plot_digit)
apply(digits[, seq(1, 5500, 1100)], 2, plot_digit)
plot_digit(digits[, 5502])
plot_digit(digits[, 6603])
apply(digits[, seq(7701, 11000, 1100)], 2, plot_digit)
